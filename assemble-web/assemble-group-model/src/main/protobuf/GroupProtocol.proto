syntax = "proto3";

// Brought in from scalapb-runtime
import "scalapb/scalapb.proto";

package com.stacktrace.yo.assemble.group;
option java_package = "com.stacktrace.yo.assemble.group";

message AssembleGroupState {
    option (scalapb.message).extends = "com.stacktrace.yo.assemble.group.Protocol.GroupState";
    string hostid = 1;
    string groupid = 2;
    string groupName = 3;
    string category = 4;
}

message AssembleGroupUserState {
    option (scalapb.message).extends = "com.stacktrace.yo.assemble.group.Protocol.GroupUserState";
    string groupid = 1;
    string hostid = 2;
    repeated string users = 3;
}

message DirectorReferenceState {
    option (scalapb.message).extends = "com.stacktrace.yo.assemble.group.Protocol.DirectorState";
    map<string, GroupReference> reference = 1;
}

message GroupReference {
    string name = 1;
    string path = 2;
}

message GroupReferenceCreated {
    option (scalapb.message).extends = "com.stacktrace.yo.assemble.group.Protocol.Event";
    string id = 1;
    string name = 2;
    string path = 3;
}

message Created {
    option (scalapb.message).extends = "com.stacktrace.yo.assemble.group.Protocol.Event";
    string hostid = 1;
    string groupid = 2;
    string groupName = 3;
    string category = 4;
}

message Joined {
    option (scalapb.message).extends = "com.stacktrace.yo.assemble.group.Protocol.Event";
    string value = 1;
}

message Left {
    option (scalapb.message).extends = "com.stacktrace.yo.assemble.group.Protocol.Event";
    string value = 1;
}

message Ended {
    option (scalapb.message).extends = "com.stacktrace.yo.assemble.group.Protocol.Event";
    string value = 1;
}

// note that models comes from the name of this proto file
// creates com.experiments.calculator.models.CalculatorModel.Event
// check the target folder to see the code